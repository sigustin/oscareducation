-load lesson_tags

  %form{method: "POST"}
    -csrf_token
    -for question in questions
      -if question.description
        .well.question-description
          =question.description|safe|encode_utf8
      -else
        -# Should never reach this error
        %div.alert.alert-danger
          Erreur : Pas d'énoncé
      -with answer=question.get_answer
        .form-group
          -if answer.type == "text"
            %input.form-control{id: "{{ forloop.counter0 }}", name: "{{ forloop.counter0 }}", type: "text", autocomplete: "off"}
          -elif answer.type == "math" or answer.type == "math-simple" or answer.type == "math-advanced"
            %span
              %textarea.keyboard
              %span.mathquill{data-keyboard-type: "{{ answer.type }}"}
              %input.form-control.hidden-math-form{id: "{{ forloop.counter0 }}", name: "{{ forloop.counter0 }}", type: "text", autocomplete: "off"}
          -elif answer.type == "radio"
            -with name=forloop.counter0
              -for option in answer.answers
                .radio
                  %label
                    %input{type: "radio", value: "{{ forloop.counter0 }}", name: "{{ name }}", autocomplete: "off"}
                    =option
          -elif answer.type == "checkbox"
            -with name=forloop.counter0
              -for option in answer.answers
                .checkbox
                  %label
                    %input{type: "checkbox", value: "{{ forloop.counter0 }}", name: "{{ name }}", autocomplete: "off"}
                    =option
          -elif answer.type == "graph"
            .graph{id: "graph-{{ forloop.counter0 }}", style: "width: 500px; height: 500px"}
            -with toploop_counter0=forloop.counter0
              -for answer in answer.answers
                %input{type: "number", value: "", name: "graph-{{ toploop_counter0 }}-{{ answer.graph.type }}-{{ forloop.counter0 }}-X", id: "graph-{{ toploop_counter0 }}-{{ answer.graph.type }}-{{ forloop.counter0 }}-X"}
                %input{type: "number", value: "", name: "graph-{{ toploop_counter0 }}-{{ answer.graph.type }}-{{ forloop.counter0 }}-Y", id: "graph-{{ toploop_counter0 }}-{{ answer.graph.type }}-{{ forloop.counter0 }}-Y"}
          -elif answer.type == "chart-barchart"
            %script{type: "text/javascript", src: "/static/js/barchart.js"}
            -with name=forloop.counter0
              -# Group 7
              %input{type: "hidden", value: "", name: "{{ name }}", id: "barchart-hiddenInput"}
              .jxgbox.chartQuestion.chartQuestionStudent#jxgboxPreview{id:barChartForm,style:"width:634px; height:676px;margin-top:20px;margin-bottom:20px;",data-chart-type:"chart-barchart",value:"chart-barchart",data-chart-raw3:"{{answer.answers}}"}
              -#.jxgbox.chartQuestion.chartQuestionValidation#jxgbox{id:barChartForm,style:"width:100%; height:676px;margin-top:20px;margin-bottom:20px;",data-chart-type:"chart-barchart",value:"chart-barchart"}
              .form-group
                %label.control-label.col-sm-3 Ajouter une nouvelle ordonnée
                .col-sm-3
                  %input.form-control{id: "newBarY",class: "newBarY",type: "number", ng-model: "newBarY", ng-required: "false"}
                .col-sm-3
                  %button.btn.btn-success.btn-addBar{onclick: "chart_add($(this))", type: "button"}
                    %span.glyphicon.glyphicon-plus
                    Ajouter
                .col-sm-3
                  %button.btn.btn-danger.btn-deleteBar{onclick: "chart_deleteLast($(this))", type: "button"}
                    %span.glyphicon.glyphicon-minus
                    Supprimer la dernière
          -elif answer.type == "chart-piechart"
            %script{type: "text/javascript", src: "/static/js/barchart.js"}
            %script{type: "text/javascript", src: "/static/js/piechart.js"}
            -with name=forloop.counter0
              -# Group 7
              .form-group
                %label.control-label.col-sm-3 Amplitude du secteur
                .col-sm-3
                  %input.form-control{id: "sector",class: "sector",type: "number", ng-model: "sector", ng-required: "false"}
                %label.control-label.col-sm-3 Nom du secteur
                .col-sm-3
                  %input.form-control{id: "labelPie",class: "labelPie",type: "text", ng-model: "labelPie", ng-required: "false"}
              .form-group
                .col-sm-2
                  %button.btn.btn-success.btn-addPie{onclick: "chart_createPieChartFromForm()", type: "button"}
                    %span.glyphicon.glyphicon-plus
                    Ajouter
                .col-sm-2
                  %button.btn.btn-danger.btn-deletePie{onclick: "chart_deleteLastPie($(this))", type: "button", class:"btn-deletePie"}
                    %span.glyphicon.glyphicon-minus
                    Supprimer la dernière
              %input{type: "hidden", value: "", name: "{{ name }}", id: "piechart-hiddenInput"}
              .jxgbox.chartQuestion.chartQuestionStudent.chartQuestionPiechart#jxgboxPreview{id:pieChartForm,style:"width:634px; height:676px;margin-top:20px;margin-bottom:20px;",data-chart-type:"chart-piechart",value:"chart-piechart",data-chart-raw3:"{{answer.answers}}"}
          -elif answer.type == "professor"
            %input.form-control{id: "{{ forloop.counter0 }}", name: "{{ forloop.counter0 }}", type: "text", autocomplete: "off"}
            -#%textarea.form-control{id: "{{ forloop.counter0 }}", name: "{{ forloop.counter0 }}", rows: "5"}
          -else
            =answer.type

    %input.btn.btn-primary{type: "submit", value: "Répondre"}

  :css
    body {
      padding-bottom: 200px;
    }
